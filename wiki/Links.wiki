#summary Useful links

= Introduction =

This pages is used to store all the intersting links realted to the project. Every time you find a web page that can be useful for the videogame development, please post it here under the right sub-group.


= Links  =

== Development ==

 * [http://www.ogre3d.org Ogre Main Page]
 * [http://www.ogre3d.org/forums/ Ogre Forums]
 * [http://www.ogre3d.org/wiki/index.php/CommonMistakes Ogre Common Mistakes]

== Tools ==
=== GUI ===
 * [http://www.cegui.org.uk/wiki/index.php/Main_Page CEGUI]
 * [http://www.ogre3d.org/wiki/index.php/Awesomium Awesonium]
 * [http://www.ogre3d.org/wiki/index.php/NaviLibrary Navi Library]

=== Viewers ===
 * [http://gamepipe.usc.edu/animation/Bake_Export/OgreLexiViewerInstall_1.0.7.msi Lexi Viewer]
 * [http://gamepipe.usc.edu/animation/Bake_Export/AniViewer.rar Ani Viewer]

== Game Coding ==

=== OpenGL & DirectX ===

 * [http://www.sjbaker.org/steve/omniv/love_your_z_buffer.html Love Your Z Buffer]

=== MVC ===

 * [http://www.gamasutra.com/features/20050414/rouwe_01.shtml Implementing MVC]

=== Lua ===

 * [http://lua-users.org/wiki/LuaStyleGuide Style Guidelines]
 * [http://www.lua.org/pil/28.html User-Defined Types in C] 
 * [http://lua-users.org/wiki/BindingEnumsToLua Binding Enums To Lua]

=== Game States ===

 * [http://www.ogre3d.org/wiki/index.php/Managing_Game_States_with_OGRE Managing Game States with OGRE]
 * [http://www.ogre3d.org/wiki/index.php/Game_State_Manager Game State Manager]
 * [http://gamedevgeek.com/tutorials/managing-game-states-in-c/ Managing Game States in C++]
 * [http://guff.tigris.org/docs/SBGames06-en.pdf An Architecture For Game State Management Based On State Hierarchies]

== Beat'em Up Tips'n'Tricks==

 * [http://www.gamasutra.com/features/20050428/sang_01.shtml Improving the combat 'Impact' of action games (from Gamasutra)]

== C++ Tips'n'Tricks ==

 * [http://en.wikipedia.org/wiki/Function_object Function Objects (introduction)]
 * [http://www.tutok.sk/fastgl/callback.html Callbacks In C++ Using Template Functors]
 * [http://www.codeproject.com/KB/stl/boostsmartptr.aspx boost Smart Pointers]
 * [http://www.codeproject.com/KB/cpp/PtrToPtr.aspx ptr-to-ptr & ref-to-ptr]

== Bugs ==

 * [http://lostgarden.com/2008/05/improving-bug-triage-with-user-pain.html Improving Bug Triage with User Pain]